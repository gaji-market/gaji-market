<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.gajimarket.dao.ChatDAO">

    <sql id="chatList">
        SELECT c.*, ui.nickname
          FROM ( SELECT ci.chatNo,
                        cm.lastMessage,
                        cm.regDate,
                        cm.regTime,
                        IFNULL(cm.checkCnt, 0) AS checkCnt,
                        CASE WHEN ci.userNo = #{userNo} THEN ci.tgUserNo ELSE ci.userNo END AS userNo
                   FROM chat_info ci LEFT JOIN ( SELECT c1.chatNo,
                                                        CASE WHEN delYn = 'N' THEN message ELSE '삭제된 메시지' END AS lastMessage,
                                                        c2.checkCnt,
                                                        regDate,
                                                        regTime
                                                   FROM chat_message c1 LEFT JOIN ( SELECT chatNo,
                                                                                           COUNT(chatNo) AS checkCnt
                                                                                      FROM chat_message
                                                                                     WHERE checkYn = 'N'
                                                                                     GROUP BY chatNo) c2 ON c1.chatNo = c2.chatNo
                                                  WHERE (c1.chatNo, CONCAT(regDate, regTime))
                                                        IN ( SELECT chatNo,
                                                                    MAX(CONCAT(regDate,regTime))
                                                               FROM chat_message
                                                              GROUP BY chatNo
                                                            )
                                                ) cm ON ci.chatNo = cm.chatNo
                  WHERE (ci.userNo = #{userNo} OR ci.tgUserNo = #{userNo}) AND ci.delYn = 'N'
               ) c JOIN user_info ui ON c.userNo = ui.no
    </sql>

    <insert id="insertChatRoom" parameterType="ChatRoomDTO" useGeneratedKeys="true" keyProperty="chatNo">
        INSERT INTO chat_info (
            userNo,
            prodNo,
            tgUserNo
        )
         SELECT #{userNo},
                #{prodNo},
                #{tgUserNo}
           FROM dual
          WHERE NOT EXISTS ( SELECT chatNo
                               FROM chat_info
                              WHERE prodNo = #{prodNo}
                                AND userNo = #{userNo}
                                AND tgUserNo = #{tgUserNo}
                                AND delYn = 'N'
          )
    </insert>

    <insert id="insertChatMessage" parameterType="java.util.Map">
        INSERT INTO chat_message (
            chatNo,
            message,
            userNo,
            regDate,
            regTime
        )
        VALUES (
            #{chatNo},
            #{msg},
            #{userNo},
            DATE_FORMAT(now(), '%Y-%m-%d'),
            DATE_FORMAT(now(), '%H:%i:%s')
        )
    </insert>

    <select id="selectChatRoom" parameterType="java.util.Map" resultType="ChatRoomDTO">
        SELECT *
          FROM chat_info
         WHERE chatNo = #{chatNo}
    </select>

    <select id="selectChatMessage" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT ui.nickname,
               ui.no,
               cm.messageNo,
               CASE WHEN cm.delYn = 'Y' THEN '삭제된 메시지' ELSE cm.message END AS message,
               cm.checkYn,
               DATE_FORMAT(cm.regDate, '%Y년 %m월 %d일') AS regDate,
               DATE_FORMAT(cm.regTime, '%p %h:%i') AS regTime
          FROM user_info ui RIGHT JOIN ( SELECT * FROM chat_message) cm ON ui.no = cm.userNo
         WHERE cm.chatNo = #{chatNo}
         ORDER BY cm.regDate, cm.regTime
    </select>

    <!-- 채팅리스트, 확인하지 않은 내역 존재하는지 확인 (checkYn Count 확인) -->
    <select id="selectChatRoomList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT T.*
          FROM (
                  <include refid="chatList"/>
                ) T
         ORDER BY regDate DESC, regTime DESC, chatNo DESC
         LIMIT #{schPage.limitPage}, #{schPage.recordCount}
    </select>

    <select id="selectChatRoomListCnt" parameterType="java.util.Map" resultType="int">
        SELECT COUNT(*)
          FROM (
                <include refid="chatList"/>
               ) T
    </select>

    <update id="updateChatMessageCheck" parameterType="java.util.Map">
        UPDATE chat_message
           SET checkYn='Y'
         WHERE chatNo = #{chatNo}
           AND userNo <![CDATA[<>]]> #{userNo}
    </update>

    <!-- 삭제 여부 N -> Y -->
    <update id="deleteChatRoom" parameterType="int">
        UPDATE chat_info
           SET delYn = 'Y'
         WHERE chatNo = #{chatNo}
    </update>

    <!-- 삭제 여부 N -> Y -->
    <update id="deleteChatMessage" parameterType="int">
        UPDATE chat_message
           SET delYn = 'Y'
         WHERE messageNo = #{messageNo}
    </update>

    <select id="selectUserInfo" parameterType="int" resultType="UserDTO">
        SELECT user_info.no AS userNo
               , id AS userId
               , pwd AS userPwd
               , name AS userName
               , nickname AS userNickName
               , gender AS userGender
               , birth AS userBirth
               , phone AS userPhone
               , address AS userAddress
               , reportCnt
               , starScore
               , socialKind
               , chatNtfct
               , cmntsNtfct
               , interstNtfct
               , outYn
               , IFNULL(f.dbFileName, '') AS dbFileName
               , IFNULL(f.uploadFileName, '') AS uploadFileName
          FROM user_info LEFT JOIN ( SELECT *
                                       FROM file
                                      WHERE gubun = 1
                                    ) f ON f.no = user_info.no
         WHERE user_info.no = #{userNo}
    </select>

    <!-- 채팅방 참여 인원 조회 (API 확인용) -->
    <select id="selectUserNoTest" parameterType="int" resultType="java.util.Map">
        SELECT userNo, tgUserNo
          FROM chat_info
         WHERE chatNo = #{chatNo}
    </select>
</mapper>